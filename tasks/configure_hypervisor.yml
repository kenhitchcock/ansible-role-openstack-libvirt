---

- name: "Install epel repository on hypervisor"
  yum:
    name: "{{ item }}"
    state: present
  loop: 
    - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

- name: "Install packages required for overcloud deployment on hypervisor"
  yum:
    name: "{{ item }}"
    state: present
  loop: 
    - python2-pip
    - gcc
    - python-devel-2.7*
    - jq

#pip install virtualbmc
#pip install --upgrade pip
- name: "Install virtualbmc"
  pip:
    name: virtualbmc

#virt-install --name ctrl01-overcloud.example.com --memory 16384 --vcpu 8 --cpu host --disk size=60,format=qcow2,bus=virtio --network bridge=virbr0,model=virtio --os-type=linux --pxe --noautoconsole
- name: "get VM disks"
  command: "ls {{ LIBVIRT_VM_DISK_LOC }}"
  register: disks
  changed_when: "disks.rc != 0"

- name: "Create the VM Container from Dict"
  shell:
    cmd: "virt-install --name {{item.key}} \
          --memory {{item.value.memory}} \
          --vcpu {{item.value.cpu}} --cpu host \
          --disk size={{item.value.disk}},format=qcow2,bus=virtio,pool={{LIBVIRT_STORAGE_POOL}} \
          --network bridge={{item.value.network}},model=virtio \
          --os-type=linux --pxe --noautoconsole"
  with_dict: "{{OSP_NODES}}"
  ignore_errors: true
  when: 
    - item.key not in disks.stdout

#vbmc add ctrl01-overcloud.example.com --port 6231 --username admin --password password
- name: "Create VMBC entries"
  shell:
    cmd: "vbmc add {{item.key}} --port {{item.value.vbmcport}} --username {{OSP_VMBC_DEFAULT_USER}} --password {{OSP_VMBC_DEFAULT_PASS}} --address {{OSP_LIBVIRT_HOST}}"
  with_dict: "{{OSP_NODES}}"
  ignore_errors: true

#vbmc start ctrl01-overcloud.example.com
- name: "Create VMBC entries"
  shell:
    cmd: "vbmc start {{item.key}}"
  with_dict: "{{OSP_NODES}}"
  ignore_errors: true

- name: "Iptables configuration"
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{item.value.vbmcport}}"
    ctstate: NEW
    jump: ACCEPT
  with_dict: "{{OSP_NODES}}"
  ignore_errors: true

- name: "Remove any previous file created."
  file:
    state: absent
    path: "/tmp/overcloud-nodes"

- name: "Remove any previous instackenv.json file created."
  file:
    state: absent
    path: "/root/instackenv.json"

- name: "Create list of overcloud nodes from dict"
  shell:
    cmd: "echo {{item.key}} >>/tmp/overcloud-nodes"
  with_dict: "{{OSP_NODES}}"
  ignore_errors: true

- name: "Copy create_instackenv.sh script"
  copy:
    src: files/create_instackenv.sh
    dest: /root/create_instackenv.sh
    owner: root
    group: root
    mode: '0750'


- name: "Create instackenv.json"
  shell:
    cmd: "./create_instackenv.sh"
  args:
    chdir: "/root/"

